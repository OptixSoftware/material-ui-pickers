{"version":3,"file":"DatePicker.js","sources":["../../src/DatePicker/DatePickerToolbar.tsx","../../src/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport PickerToolbar from '../_shared/PickerToolbar';\r\nimport { DatePickerView } from './DatePicker';\r\nimport { useUtils } from '../_shared/hooks/useUtils';\r\nimport { ToolbarComponentProps } from '../Picker/Picker';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\nimport { isYearAndMonthViews, isYearOnlyView } from '../_helpers/date-utils';\r\n\r\nexport const useStyles = makeStyles(\r\n  {\r\n    dateTitleLandscape: {\r\n      margin: 'auto 16px auto auto',\r\n    },\r\n    penIcon: {\r\n      position: 'relative',\r\n      top: 4,\r\n    },\r\n  },\r\n  { name: 'MuiPickersDatePickerRoot' }\r\n);\r\n\r\nexport const DatePickerToolbar: React.FC<ToolbarComponentProps> = ({\r\n  date,\r\n  views,\r\n  isLandscape,\r\n  isMobileKeyboardViewOpen,\r\n  toggleMobileKeyboardView,\r\n  title = 'SELECT DATE',\r\n}) => {\r\n  const utils = useUtils();\r\n  const classes = useStyles();\r\n\r\n  const dateText = React.useMemo(() => {\r\n    if (isYearOnlyView(views as DatePickerView[])) {\r\n      return utils.format(date, 'year');\r\n    }\r\n\r\n    if (isYearAndMonthViews(views as DatePickerView[])) {\r\n      return utils.format(date, 'month');\r\n    }\r\n\r\n    return utils.format(date, 'normalDate');\r\n  }, [date, utils, views]);\r\n\r\n  return (\r\n    <PickerToolbar\r\n      title={title}\r\n      isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\r\n      toggleMobileKeyboardView={toggleMobileKeyboardView}\r\n      isLandscape={isLandscape}\r\n      penIconClassName={classes.penIcon}\r\n    >\r\n      <Typography\r\n        variant=\"h4\"\r\n        children={dateText}\r\n        align={isLandscape ? 'left' : 'center'}\r\n        className={clsx({ [classes.dateTitleLandscape]: isLandscape })}\r\n      />\r\n    </PickerToolbar>\r\n  );\r\n};\r\n","import { useUtils } from '../_shared/hooks/useUtils';\r\nimport { MaterialUiPickersDate } from '../typings/date';\r\nimport { DatePickerToolbar } from './DatePickerToolbar';\r\nimport { getFormatByViews } from '../_helpers/date-utils';\r\nimport { datePickerDefaultProps } from '../constants/prop-types';\r\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\r\nimport { ExportedCalendarProps } from '../views/Calendar/CalendarView';\r\nimport { ModalWrapper, InlineWrapper, StaticWrapper } from '../wrappers/Wrapper';\r\nimport {\r\n  WithDateInputProps,\r\n  makePickerWithStateAndWrapper,\r\n  WithViewsProps,\r\n} from '../Picker/makePickerWithState';\r\n\r\nexport type DatePickerView = 'year' | 'date' | 'month';\r\n\r\nexport interface BaseDatePickerProps extends ExportedCalendarProps {\r\n  /** Callback firing on year change @DateIOType */\r\n  onYearChange?: (date: MaterialUiPickersDate) => void;\r\n}\r\n\r\nexport type DatePickerProps = BaseDatePickerProps &\r\n  WithDateInputProps &\r\n  WithViewsProps<'year' | 'date' | 'month'>;\r\n\r\nconst datePickerConfig = {\r\n  DefaultToolbarComponent: DatePickerToolbar,\r\n  useDefaultProps: ({ openTo = 'date', views = ['year', 'date'] }: DatePickerProps) => {\r\n    const utils = useUtils();\r\n\r\n    return {\r\n      ...datePickerDefaultProps,\r\n      views,\r\n      openTo,\r\n      format: getFormatByViews(views, utils),\r\n    };\r\n  },\r\n};\r\n\r\nexport const DatePicker = makePickerWithStateAndWrapper<DatePickerProps>(\r\n  ResponsiveWrapper,\r\n  datePickerConfig\r\n);\r\n\r\nexport const MobileDatePicker = makePickerWithStateAndWrapper<DatePickerProps>(\r\n  ModalWrapper,\r\n  datePickerConfig\r\n);\r\n\r\nexport const DesktopDatePicker = makePickerWithStateAndWrapper<DatePickerProps>(\r\n  InlineWrapper,\r\n  datePickerConfig\r\n);\r\n\r\nexport const StaticDatePicker = makePickerWithStateAndWrapper<DatePickerProps>(\r\n  StaticWrapper,\r\n  datePickerConfig\r\n);\r\n"],"names":["useStyles","makeStyles","dateTitleLandscape","margin","penIcon","position","top","name","DatePickerToolbar","date","views","isLandscape","isMobileKeyboardViewOpen","toggleMobileKeyboardView","title","utils","useUtils","classes","dateText","React","isYearOnlyView","format","isYearAndMonthViews","React.createElement","clsx","datePickerConfig","DefaultToolbarComponent","useDefaultProps","openTo","datePickerDefaultProps","getFormatByViews","DatePicker","makePickerWithStateAndWrapper","ResponsiveWrapper","MobileDatePicker","ModalWrapper","DesktopDatePicker","InlineWrapper","StaticDatePicker","StaticWrapper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASO,IAAMA,SAAS,GAAGC,UAAU,CACjC;EACEC,kBAAkB,EAAE;IAClBC,MAAM,EAAE;GAFZ;EAIEC,OAAO,EAAE;IACPC,QAAQ,EAAE,UADH;IAEPC,GAAG,EAAE;;CAPwB,EAUjC;EAAEC,IAAI,EAAE;CAVyB,CAA5B;AAaP,AAAO,IAAMC,iBAAkD,GAAG,SAArDA,iBAAqD,OAO5D;MANJC,IAMI,QANJA,IAMI;MALJC,KAKI,QALJA,KAKI;MAJJC,WAII,QAJJA,WAII;MAHJC,wBAGI,QAHJA,wBAGI;MAFJC,wBAEI,QAFJA,wBAEI;wBADJC,KACI;MADJA,KACI,2BADI,aACJ;MACEC,KAAK,GAAGC,QAAQ,EAAtB;MACMC,OAAO,GAAGjB,SAAS,EAAzB;MAEMkB,QAAQ,GAAGC,OAAA,CAAc,YAAM;QAC/BC,cAAc,CAACV,KAAD,CAAlB,EAA+C;aACtCK,KAAK,CAACM,MAAN,CAAaZ,IAAb,EAAmB,MAAnB,CAAP;;;QAGEa,mBAAmB,CAACZ,KAAD,CAAvB,EAAoD;aAC3CK,KAAK,CAACM,MAAN,CAAaZ,IAAb,EAAmB,OAAnB,CAAP;;;WAGKM,KAAK,CAACM,MAAN,CAAaZ,IAAb,EAAmB,YAAnB,CAAP;GATe,EAUd,CAACA,IAAD,EAAOM,KAAP,EAAcL,KAAd,CAVc,CAAjB;SAaEa,cAAC,aAAD;IACE,KAAK,EAAET,KADT;IAEE,wBAAwB,EAAEF,wBAF5B;IAGE,wBAAwB,EAAEC,wBAH5B;IAIE,WAAW,EAAEF,WAJf;IAKE,gBAAgB,EAAEM,OAAO,CAACb;KAE1BmB,cAAC,UAAD;IACE,OAAO,EAAC,IADV;IAEE,QAAQ,EAAEL,QAFZ;IAGE,KAAK,EAAEP,WAAW,GAAG,MAAH,GAAY,QAHhC;IAIE,SAAS,EAAEa,IAAI,CAAiCb,WAAjC,IAAIM,OAAO,CAACf,kBAAZ;IAXnB,CADF;CAvBK;;;;;ACGP,IAAMuB,gBAAgB,GAAG;EACvBC,uBAAuB,EAAElB,iBADF;EAEvBmB,eAAe,EAAE,+BAAoE;2BAAjEC,MAAiE;QAAjEA,MAAiE,4BAAxD,MAAwD;0BAAhDlB,KAAgD;QAAhDA,KAAgD,2BAAxC,CAAC,MAAD,EAAS,MAAT,CAAwC;QAC7EK,KAAK,GAAGC,QAAQ,EAAtB;6BAGKa,sBADL;MAEEnB,KAAK,EAALA,KAFF;MAGEkB,MAAM,EAANA,MAHF;MAIEP,MAAM,EAAES,gBAAgB,CAACpB,KAAD,EAAQK,KAAR;;;CAT9B;AAcA,IAAagB,UAAU,GAAGC,6BAA6B,CACrDC,iBADqD,EAErDR,gBAFqD,CAAhD;AAKP,IAAaS,gBAAgB,GAAGF,6BAA6B,CAC3DG,aAD2D,EAE3DV,gBAF2D,CAAtD;AAKP,IAAaW,iBAAiB,GAAGJ,6BAA6B,CAC5DK,cAD4D,EAE5DZ,gBAF4D,CAAvD;AAKP,IAAaa,gBAAgB,GAAGN,6BAA6B,CAC3DO,aAD2D,EAE3Dd,gBAF2D,CAAtD;;;;"}